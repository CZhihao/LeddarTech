// *****************************************************************************
// Module..: SDK -- Software development kit for Leddar products.
//
/// \file    SensorListForm.cs
///
/// \brief   A form showing a list of available sensors and that can return
///          the user's selection.
///
// Platform: .NET
//
// Copyright (c) 2013 LeddarTech Inc. All rights reserved.
// Information contained herein is or may be confidential and proprietary to
// LeddarTech inc. Prior to using any part of the software development kit
// accompanying this notice, you must accept and agree to be bound to the
// terms of the LeddarTech Inc. license agreement accompanying this file.
// *****************************************************************************

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace LeddarNetDemo
{
    public partial class SensorListForm : Form
    {
        // *********************************************************************
        // Function: SensorListForm
        //
        /// \brief   Constructor generated by form designer.
        // **********************************************************************

        public SensorListForm()
        {
            InitializeComponent();
        }

        // *********************************************************************
        // Function: PBScanClick
        //
        /// \brief   Event-handler called when the Scan button is clicked.
        /// 
        /// Get the list of sensor addresses and copy it in the list view.
        /// 
        /// \param   sender  Not used
        /// \param   e       Not used
        // **********************************************************************

        private void
        PBScanClick( object sender, EventArgs e )
        {
            Cursor = Cursors.WaitCursor;

            fListView.Items.Clear();

            List<String> lAddresses = LeddarNET.Device.ListSensors( 2000 );

            foreach( String lAddress in lAddresses )
            {
                fListView.Items.Add( lAddress );
            }

            Cursor = Cursors.Default;
        }

        // *********************************************************************
        // Function: PBOKClick
        //
        /// \brief   Event-handler called when the OK button is clicked.
        /// 
        /// If there is a selected line in the list view close the dialog with
        /// an OK result, otherwise notice the user of the problem.
        /// 
        /// \param   sender  Not used
        /// \param   e       Not used
        // **********************************************************************

        private void
        PBOKClick( object sender, EventArgs e )
        {
            if ( fListView.SelectedIndices.Count > 0 )
            {
                DialogResult = DialogResult.OK;
                Close();
            }
            else
            {
                MessageBox.Show( "Please select a sensor!" );
            }
        }

        // *********************************************************************
        // Function: SelectedAddress
        //
        /// \brief   Property for the called to retrieve the selected address.
        // **********************************************************************

        public String SelectedAddress
        {
            get
            {
                return fListView.Items[fListView.SelectedIndices[0]].Text;
            }
        }
    }
}

// End of file SensorListForm.cs
